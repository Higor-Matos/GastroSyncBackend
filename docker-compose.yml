version: '3.8'

services:
  gastrosyncbackend.presentation:
    image: ${DOCKER_REGISTRY-}gastrosyncbackendpresentation
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    build:
      context: .
      dockerfile: GastroSyncBackend.Presentation/Dockerfile
    ports:
        - "8080:80"
        - "8443:443"
    networks:
      - gastrosync_elk_network
    depends_on:
      elasticsearch:
          condition: service_healthy
      kibana:
          condition: service_healthy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=true
    ports:
      - 9200:9200
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - gastrosync_elk_network
    healthcheck:
      test: ["CMD-SHELL", "curl -sSL http://localhost:9200/_cluster/health?pretty || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.0
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - 5601:5601
    volumes:
      - kbdata:/usr/share/kibana/data
    depends_on:
      - elasticsearch
    networks:
      - gastrosync_elk_network
    healthcheck:
      test: ["CMD-SHELL", "curl -sSL http://localhost:5601 || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  esdata:
    driver: local
  kbdata:
    driver: local

networks:
  gastrosync_elk_network:
